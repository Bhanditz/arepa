#!/usr/bin/perl

use strict;
use warnings;
use Carp;

use Arepa::Config;
use Arepa::BuilderFarm;
use Arepa::Builder::Sbuild;

my $config_file = '/etc/arepa/config.yml';

sub show_help {
    print STDERR <<EOD;
SYNTAX: arepa-admin <command> [options]
where <command> is one of:
  createbuilder
  init
  uninit

arepa-admin createbuilder /var/mybuilder ftp://... squeeze

arepa-admin init
arepa-admin init just_this_builder

arepa-admin uninit
arepa-admin uninit just_this_builder
EOD
    exit 1;
}

my ($command, @args) = @ARGV;
if (scalar @ARGV == 0) {
    print STDERR "arepa-admin needs a command\n";
    show_help;
}

if ($command eq 'createbuilder') {
    my ($builder_dir, $mirror, $distribution) = @args;
    if (scalar @args != 3) {
        print STDERR "createbuilder needs exactly three arguments\n";
        show_help;
    }
    Arepa::Builder::Sbuild->create($builder_dir, $mirror, $distribution);
}
elsif ($command eq 'init') {
    Arepa::Builder->ui_module("Arepa::UI::Null");
    my $farm = Arepa::BuilderFarm->new($config_file);
    if (scalar @args) {
        foreach my $builder (@args) {
            $farm->init_builder($builder);
        }
    }
    else {
        $farm->init_builders;
    }
}
elsif ($command eq 'uninit') {
    Arepa::Builder->ui_module("Arepa::UI::Null");
    my $farm = Arepa::BuilderFarm->new($config_file);
    if (scalar @args) {
        foreach my $builder (@args) {
            $farm->uninit_builder($builder);
        }
    }
    else {
        $farm->uninit_builders;
    }
}
else {
    print STDERR "Unknown command '$command'\n";
    exit 1;
}
